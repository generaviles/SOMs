{
    "collab_server" : "",
    "contents" : "---\ntitle: \"SOM 2 LARVAS\"\noutput: html_notebook\n---\n\n#1. Loading raw data and getting it ready\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\nlibrary(readr)\nlarva2 <- read_csv(\"~/GENER/ricardo/1. Raw Data/PSOMML_2Larvas.csv\", \n                          col_names = FALSE)\ncolnames(larva2) <- c(\"FILA\", \"COLUMNA\", \"RED\", \"GREEN\", \"BLUE\")\n\n\n```\n\nThe dataframe obtained is made of `integer` values:\n\n```{r}\nstr(larva2)\n```\n\n\nThis will be a problem down the line when feeding this data to the algorithm, values have to be changed to  `numeric`:\n\n```{r}\nlarva2[,'FILA'] <- as.numeric(as.factor(larva2$FILA))\nlarva2[,'COLUMNA'] <- as.numeric(as.factor(larva2$COLUMNA))\nlarva2[,'RED'] <- as.numeric(as.factor(larva2$RED))\nlarva2[,'GREEN'] <- as.numeric(as.factor(larva2$GREEN))\nlarva2[,'BLUE'] <- as.numeric(as.factor(larva2$BLUE))\n```\n\nWhit this taken care of we have a database ready to be fed to the algorithmL\n```{r}\nstr(larva2)\n```\n#2 Initial exploration of data\n\nA brief summary of the values of the variable can help with the initial understanding of things:\n```{r}\nsummary(larva2)\n```\n\n\n#3 Self Organizing Map\n\n##Loading required package\n\n```{r, message=FALSE, warning=FALSE}\nrequire(kohonen)\n```\n\n##Changing dataframe to a `matrix`\n```{r}\n#I removed the function scale() because it does not need to be scaled.\nlarva2.matrix <- as.matrix(larva2)\n\n#TEST\nlarva2.matrixTest <- larva2.matrix[1:20000,]\n```\n\n##Creating the SOM grid\n```{r}\nsom_grid <- somgrid(xdim = 30, ydim = 30, topo = \"rectangular\")\n```\n\n\n##Training the SOM\n```{r, message=FALSE, warning=FALSE, include=FALSE}\nsom_model <- som(larva2.matrix,\n                 grid = som_grid,\n                 rlen = 1500,\n                 alpha = c(0.05,0.01),\n                 keep.data = TRUE)\n```\n\n##Training progress evaluation\n```{r, message=FALSE, warning=FALSE}\nplot(som_model, type = \"changes\")\n```\n\n##Node counts\n```{r, fig.height= 8}\nsource('coolBlueHotRed.R')\nplot(som_model, type = \"counts\", palette.name=coolBlueHotRed)\n```\n\n##SOM by RGB value\n\n```{r, fig.height=10}\npar(mfrow = c(2,2))\nplot(som_model,\n     type = \"property\",\n     property = models[,3],\n     main=names(models)[3],\n     palette.name=coolBlueHotRed)\nplot(som_model,\n     type = \"property\",\n     property = models[,4],\n     main=names(models)[4],\n     palette.name=coolBlueHotRed)\nplot(som_model,\n     type = \"property\",\n     property = models[,5],\n     main=names(models)[5],\n     palette.name=coolBlueHotRed)\n\n```\n\n\n##Neighbor Distance\n```{r, fig.align='center'}\nplot(som_model, type = \"dist.neighbours\", palette.name = grey.colors)\n```\n\n##Code Spread\n```{r, fig.height= 10}\nplot(som_model, type = \"codes\", palette.name = coolBlueHotRed)\n```\n\n##Clustering\n```{r}\nmydata <- som_model$codes \nwss <- (nrow(mydata)-1)*sum(apply(data.frame(mydata),2,var)) \nfor (i in 2:20) {\n  wss[i] <- sum(kmeans(data.frame(mydata), centers=i)$withinss)\n}\nplot(1:20, wss, type=\"b\", xlab=\"Number of Clusters\",\n     ylab=\"Within groups sum of squares\", main=\"Within cluster sum of squares (WCSS)\")\n\nsom_cluster <- cutree(hclust(dist(data.frame(som_model$codes))), 3)\n\n\n```\n\nIn this graphic we can see that the ideal amount of clusters is not more than 5. Starting with 5 and going down we will choose the smallest number that gives us a smooth distribution in quantity of it's members:\n\n```{r}\n# 7 Clusters -- the first cluster has considerably less members than the other four ones.\ntable(cutree(hclust(dist(data.frame(som_model$codes))), 3))\n\n\n# 5 Clusters -- the first cluster has considerably less members than the other four ones.\ntable(cutree(hclust(dist(data.frame(som_model$codes))), 5))\n\n#4 clusters -- we have founde the good one.\ntable(cutree(hclust(dist(data.frame(som_model$codes))), 4))\n```\n\n\n```{r, fig.height= 10}\npretty_palette <- c(\"#1f77b4\", '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2')\n\nplot(som_model, type=\"mapping\", bgcol = pretty_palette[som_cluster], main = \"Clusters\", keepMargins = TRUE) \nadd.cluster.boundaries(som_model, som_cluster, lwd = 7)\n```\n\n",
    "created" : 1493826010278.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2722426128",
    "id" : "2AC6699B",
    "lastKnownWriteTime" : 1493838102,
    "last_content_update" : 1493838102214,
    "path" : "~/GENER/ricardo/4. Reproducible process/larva2.Rmd",
    "project_path" : "4. Reproducible process/larva2.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}